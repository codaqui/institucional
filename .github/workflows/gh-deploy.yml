name: "Deploy Environment"

on:
  push:
    branches: [ develop, main ]

permissions:
  contents: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ 3.11 ]

    steps:
      - uses: actions/checkout@v5

      - name: Some check on branch
        id: branch_check
        run: |
          echo "Running on branch ${{ github.ref }}"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "env_name=gh-pages" >> $GITHUB_OUTPUT
          elif [ "${{ github.ref }}" = "refs/heads/develop" ]; then
            echo "env_name=gh-pages-develop" >> $GITHUB_OUTPUT
          else
            echo "env_name=gh-pages-feature" >> $GITHUB_OUTPUT
          fi         
        
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64 

      - uses: actions/cache@v4
        with:
          key: ${{ github.ref }}
          path: .cache

      - name: Install requirements
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN_MKDOCS }}
        run: |
          # Git Clone with GH
          gh repo clone squidfunk/mkdocs-material-insiders

          # Install
          sudo apt-get install -y libcairo2-dev libfreetype6-dev libffi-dev libjpeg-dev libpng-dev libz-dev
          python3 -m pip install -U pip
          python3 -m pip install -r requirements.txt
          python3 -m pip install -e mkdocs-material-insiders

      - name: Deploy mkdocs ðŸš€
        run: python3 -m mkdocs gh-deploy --force --remote-branch ${{ steps.branch_check.outputs.env_name }}

      # - name: Set up Go
      #   uses: actions/setup-go@v4
      #   with:
      #     go-version: '>=1.18.0'

      # - name: Deploy Colabs from google-colab directory ðŸš€
      #   run: |
      #     # Create a claat files
      #     bash .github/workflows/scripts/claat.sh

      #     # Checkout on branch gh-pages-* depending on branch
      #     git checkout ${{ steps.branch_check.outputs.env_name }}

      #     # See actual branch
      #     echo "Running on branch $(git rev-parse --abbrev-ref HEAD)"

      #     # Git add folder google-colab excluding .md files
      #     git config --global user.name 'Codaqui Bot'
      #     git config --global user.email 'contato@codaqui.dev'
      #     git add google-colab -f --all -- ':!*.md'
      #     git commit -m "Update google-colab paths"
      #     git push --set-upstream origin ${{ steps.branch_check.outputs.env_name }}